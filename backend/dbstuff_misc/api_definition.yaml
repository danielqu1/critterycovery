openapi: 3.0.0
info:
  version: 1.0.0
  title: critterycovery API
servers:
  - url: 'https://critterycovery.me/api'
paths:
  /species:
    get:
      summary: 'Returns all species'
      responses:
        '200':
          description: JSON array of species names
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Species'
              example: 
                  [
                    {Alabama beach mouse: Peromyscus polionotus ammobates},
                    {American alligator: Alligator mississippiensis},
                    {Atlantic puffin: Fratercula arctica}
                  ]
  /species/{scientificName}:
    get:
      summary: 'Returns details about a particular species'
      operationId: getSpecies 
      tags:
          - species 
      parameters:
          - name: scientificName
            in: path
            description: Scientific name of the species
            required: true
            schema:
              type: string
      responses:
        '200':
          description: Species details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Species'
              example:
                scientificName: Peromyscus polionotus ammobates
                commonName: Alabama beach mouse
                stateID: AL
                habitat: Shrub & Herb Vegetation
                status: Listed
                rank: T1
                kingdom: Animalia
                phylum: Craniata
                taxclass: Mammalia
                taxorder: Rodentia
                family: Cricetidae
                genus: Peromyscus
  /habitat:
    get:
      summary: 'Returns all habitats'
      responses:
        '200':
          description: JSON array of habitat names
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Habitat'
              example: 
                  [
                    {Shrub & Herb Vegetation: CLASS},
                    {Tropical Forest & Woodland: SUBCLASS},
                    {Desert & Semi-Desert: CLASS}
                  ]
  /habitat/{habitat}:
    get:
      summary: 'Returns details about a particular habitat'
      operationId: getHabitat
      tags:
          - habitat 
      parameters:
          - name: habitat
            in: path
            description: Habitat name
            required: true
            schema:
              type: string
      responses:
        '200':
          description: Habitat details 
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Habitat'   
              example:
                scientificName: Tropical Forest & Woodland Subclass
                commonName: Tropical Forest & Woodland
                ecosystemType: SUBCLASS
                parentName: Forest & Woodland
                stateID: FL
                
  /countries:
    get:
      summary: 'Returns all countries'
      responses:
        '200':
          description: JSON array of country names
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Country' 
              example:
                [
                  {United States: US},
                  {Canada: CA},
                  {Australia: AU}
                ]
  /countries/name=<name>:
    get:
      summary: 'Search for country by name'
      operationId: getCountry
      tags:
          - country 
      parameters:
          - name: name
            in: path
            description: Name of country
            required: true
            schema:
              type: string
      responses:
        '200':
          description: Search for a country by name
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Country' 
              example:
                stateID: US
                name: United States
                capital: Washington DC
                populationMillions: 328.2
                currency: $
#  /user:
#    get:
#      summary: 'Returns details about a particular species'
#      operationId: listUser
#      tags:
#        - user
#      parameters:
#        - name: id
#          in: query
#          description: ID of the user
#          required: true
#          schema:
#            type: integer
#            format: int32
#      responses:
#        '200':
#          description: 'Sample response: Details about a species by name'
#          headers:
#            x-next:
#              description: A link to the next page of responses
#              schema:
#                type: string
#          content:
#            application/json:
#              schema:
#                $ref: '#/components/schemas/User'
#        default:
#          description: Unexpected error
#          content:
#            application/json:
#              schema:
#                $ref: '#/components/schemas/Error'
components:
  schemas:
    Habitat:
      type: object
      required:
        - name
      properties:
        id: 
            type: integer
        name: 
            type: string
        marine: 
            type: boolean
        reported_marine_area: 
            type: number
        reported_terrestrial_area: 
            type: number
        countries: 
            type: string
        iucn_category: 
            type: integer
        designation_name: 
            type: string
        designation_id: 
            type: integer
        link: 
            type: string
        image_link: 
            type: string
        embedded_map_link: 
            type: string
    Species:
      type: object
      required:
        - scientific_name
      properties:
        scientific_name: 
            type: string
        subspecies: 
            type: string
        kingdom: 
            type: string
        phylum: 
            type: string
        _class: 
            type: string
        _order: 
            type: string
        family: 
            type: string
        genus: 
            type: string
        common_name: 
            type: string
        population_trend: 
            type: string
        marine: 
            type: boolean
        freshwater: 
            type: boolean
        terrestrial: 
            type: boolean
        taxonomic_notes: 
            type: string
        rationale: 
            type: string
        geographic_range: 
            type: string
        population: 
            type: string
        text_habitat: 
            type: string
        threats: 
            type: string
        conservation_measures: 
            type: string
        image_link: 
            type: string
    Country:
      type: object
      required:
        - name
      properties:
        name: 
            type: string
        alpha2_code: 
            type: string
        alpha3_code: 
            type: string
        total_pop: 
            type: integer
        capital: 
            type: string
        region: 
            type: string
        subregion: 
            type: string
        latitude: 
            type: number
        longitude: 
            type: number
        area: 
            type: number
        gini_index: 
            type: integer
        flag: 
            type: string
        embedded_map_link: 
            type: string

    Error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string